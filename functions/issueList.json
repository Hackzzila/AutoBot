{
    "responses": {
        "strictmode": {
            "message": "It looks like you have an outdated node version! You need 6.0.0 or newer. Go to https://nodejs.org/en/download/ to update.",
            "info": "Discord.js uses features in ES6, you need node 6.0.0 or above to use these features",
            "problem": "Outdated node version",
            "solution": "Go to [nodejs.org](https://nodejs.org/en/download/) and update your node version to 6.0.0 or above."
        },
        "async": {
            "message": "It looks like you are trying to use async! To do this you need node 7.0.0 (you can check this with `node -v`) or newer and you need to use the `--harmony` flag. E.g. `node --harmony bot.js`. Go to https://nodejs.org/en/download/ if you need to update.",
            "info": "Async needs the harmony flag and node 7.0.0 or above",
            "problem": "Either an outdated node version, or no harmony flag",
            "solution": "If your node version is less than 7.0.0 (you can check with `node -v`) go to [nodejs.org](https://nodejs.org/en/download/) and update your node version to 7.0.0 or above\nAlso make sure to run with the `--harmony` flag (note: this flag needs to go *before* your filename). E.g. `node --harmony bot.js`"
        },
        "gyperror": {
            "message": "It looks like you are having gyp errors! You want to install windows-build-tools (`npm i -g windows-build-tools`) if you are on Windows or build-essential (`sudo apt install build-essential`) if you are on Linux",
            "info": "Some packages require a C++ compiler and Python2 to install. Installing windows-build-tools or build-utils will install these for you",
            "problem": "gyp errors",
            "solution": "Install windows-build-tools (`npm i -g windows-build-tools`) if you are on Windows or build-essential (`sudo apt install build-essential`) if you are on Linux"
        },
        "lostmodule": {
            "message": "It looks like you either forgot to install something or node cant find your file! Double check your spelling of the filename. You need to run `npm install PACKAGENAME` to install a package. To install discord.js run `npm install discord.js`",
            "info": "You are either requiring a package that you didnt install or trying to run a file that doesnt exist",
            "problem": "Missing package or file doesnt exist",
            "solution": "Double check your spelling of the file. Run `npm install PACKAGENAME` to install a package. To install discord.js run `npm install discord.js`"
        },
        "msgnotdef": {
            "message": "It seems like you are trying to use `msg` or `message` where it is not defined.",
            "info": "Trying to use a message handler where it is not defined.",
            "problem": "Either using the wrong message handler or youre trying to use it in another event other than message, such as `guildCreate`",
            "solution": "Use the correct `message` or `msg`, or dont use it at all."
        },
        "botnotdef": {
            "message": "It seems like you are trying to use `bot` or `client` where it is not defined.",
            "info": "This is what typically happens when someone who copies and pastes codes without checking.",
            "problem": "You are trying to use `bot` or `client` where it isnt defined!",
            "solution": "Use the same variable defined in the `const <thisvar> = new Discord.Client();` line, whether thats `bot` or `client`, at the top of your file."
        },
        "richembed": {
            "message": "Message",
            "info": "Info",
            "problem": "Problem",
            "solution": "Solution"
        },
        "unhandledpromise": {
            "message": "Looks like you've forgotten to catch a promise somewhere.  Promises have 3 states: `pending`, `resolved`, and `rejected`.  Most of the time you only deal with the `resolved` case (by appending `.then` to an asynchronous API call, for instance), but occasionally a promise might reject if there was some sort of error.",
            "info": "Both of these solutions will log the full error into console so you can find out what the problem is and where to find it.  The first solution should only be used for debugging: it's bad practice to have a catchall for errors because errors properly require case-by-case handling.  Check out [promise chaining](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then#Chaining) to efficiently handle your errors: you can insert a `catch` call anywhere in a promise chain, which will catch any prior rejections.",
            "problem": "Unhandled promise rejections usually arise from incorrect calls to the Discord API, which often means that you're missing a parameter (`Bad Request`) or your bot doesn't have permission to do what it's trying to do (`Forbidden`).  If you're missing a parameter, that usually means that some data that you expect to be defined is actually `undefined` or some other unexpected value.",
            "solution": "There are a couple options.  If you're debugging and just want to find the error, you can place the following in your main bot file:\n```js\nprocess.on('unhandledRejection', console.error);\n```\nFor a more permanent solution, place the following after any API calls that might fail:\n```js\n<some api call>.catch(console.error);\n```"
        },
        "opusengine": {
            "message": "In order to output sound, discord.js requires either one of 2 opus libraries. `opusscript` is easy to install, but has memory leaks. `node-opus` is harder to install but is better overall.",
            "info": "You'll also need ffmpeg installed on your system.\nPlease see: [**Windows**](http://adaptivesamples.com/how-to-install-ffmpeg-on-windows/) :: [**OSX**](http://www.renevolution.com/ffmpeg/2013/03/16/how-to-install-ffmpeg-on-mac-os-x.html) :: [**Linux**](https://www.assetbank.co.uk/support/documentation/install/ffmpeg-debian-squeeze/ffmpeg-debian-jessie/)",
            "problem": "Discord.js requires an opus engine module to output sound.",
            "solution": "`npm install opusscript` to install opusscript. Great in dev environments where performance won't matter (and especially windows)\n_or_\n`npm install node-opus` to install node-opus. Requires Python **version 2.7.x** installed, and build tools, see <link> for more info. "
        },
        "ffmpeg": {
            "message": "Discord.js requires a nifty piece of software called FFMPEG in order to stream audio from your system to Discord. Please ensure you follow the solution as it will help resolve this issue.",
            "info": "\u200b",
            "problem": "FFMPEG was not found/installed on your system. This will prevent you from being able to utilise any audio functions of the Discord.js Library as it is requires to transcode and stream the audio data to Discord via your bot.",
            "solution": "Dependant on which OS your system is running on, it can be as simple as running a terminal command or as hard has having to modify system variables.\n\n[**Windows**](http://adaptivesamples.com/how-to-install-ffmpeg-on-windows/) :: [**OSX**](http://www.renevolution.com/ffmpeg/2013/03/16/how-to-install-ffmpeg-on-mac-os-x.html) :: [**Linux**](https://www.assetbank.co.uk/support/documentation/install/ffmpeg-debian-squeeze/ffmpeg-debian-jessie/)"
        },
        "badrequest": {
          "message":"Looks like you've encountered a bad request.",
          "info":"There's 3 known causes for a bad request, empty message, message too big and embed error.",
          "problem":"Either you're sending an empty message, your message is too big or you have a problem with your embed.",
          "solution":"**1)** Your message is empty: An empty message, aka a 0-length string. Messages cannot be empty.\n**2)** Your message is too big: Any message over 2000 character is rejected, just like in the client.\n**3)** There is an error in your embed: If you're attempting to send an embed, there is an error in it. For example an empty field, a field that's too large, etc."
        },
        "forbidden": {
          "message":"Looks like you've encountered a Forbidden error, this happens when your bot attempts to do something it can't.",
          "info":"The forbidden permission is typically related to permissions, for example trying to delete messages without the **MANAGE_MESSAGES** permission.",
          "problem":"Your bot is attempting to do something it can't, for example apply roles above itself to users.",
          "solution":"Depending on the action your bot is attempting will decide the course of action, your bot must have the correct permissions to achieve what you want and the bot for example cannot apply roles, or affect users with roles above it's own."
        }
    }
}
